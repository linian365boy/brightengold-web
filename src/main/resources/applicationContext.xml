<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/task
    	  http://www.springframework.org/schema/task/spring-task-3.1.xsd">
    <import resource="application-security.xml"/>
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
                <!-- <value>i18n/messages</value> -->
            </list>
        </property>
        <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称 -->
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
    <context:component-scan base-package="com.brightengold"/>
    <task:annotation-driven/>
    <!-- 定义受环境影响易变的变量 -->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <!-- 禁止调整加载顺序(注：系统以list最后一个有效的value元素为准) -->
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:common.properties</value>
            </list>
        </property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="properties" ref="configProperties"/>
    </bean>

    <import resource="classpath:/dataSource.xml"/>

    <!-- spring和MyBatis整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描domain目录, 省掉mybatis-config.xml的configuration里的手工配置 -->
        <property name="typeAliasesPackage" value="com.brightengold.model,cn.rainier.nian.model"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml"></property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="basePackage" value="com.brightengold.dao,cn.rainier.nian.dao"/>
    </bean>


    <bean class="cn.rainier.nian.service.impl.UserServiceImpl" id="userService">
        <property name="userDao" ref="userDao"/>
        <property name="outCSV" ref="outUser"/>
    </bean>

    <bean id="roleService" class="cn.rainier.nian.service.impl.RoleServiceImpl">
        <property name="roleDao" ref="roleDao"/>
        <property name="outCSV" ref="outRole"/>
    </bean>

    <bean id="menuService" class="cn.rainier.nian.service.impl.MenuServiceImpl">
        <property name="menuDao" ref="menuDao"/>
    </bean>

    <bean id="resourceService" class="cn.rainier.nian.service.impl.ResourceServiceImpl">
        <property name="resourceDao" ref="resourceDao"/>
    </bean>

    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">yes</prop>
                        <prop key="kaptcha.border.color">105,179,90</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.image.width">125</prop>
                        <prop key="kaptcha.image.height">37</prop>
                        <prop key="kaptcha.textproducer.font.size">37</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${email.host}"/>
        <property name="protocol" value="${email.protocol}"/>
        <property name="port" value="${email.port}"/>
        <property name="username" value="${email.username}"/>
        <property name="password" value="${email.password}"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="prop">true</prop>
                <prop key="mail.smtp.timeout">25000</prop>
                <!-- 启动调试开关 -->
                <prop key="mail.debug">${email.debug}</prop>
            </props>
        </property>
    </bean>

    <!-- 支持异步方法执行 -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5"/>
        <property name="maxPoolSize" value="10"/>
        <property name="queueCapacity" value="25"/>
    </bean>

</beans>